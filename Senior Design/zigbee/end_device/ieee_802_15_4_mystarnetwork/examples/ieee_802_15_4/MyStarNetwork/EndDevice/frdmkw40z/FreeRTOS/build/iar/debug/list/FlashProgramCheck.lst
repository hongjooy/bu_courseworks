###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.3.10732/W32 for ARM       06/Apr/2016  15:58:27
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0\platform\drivers\src\flash\C90TFS\drvsrc\source\FlashProgramCheck.c
#    Command line =  
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0\platform\drivers\src\flash\C90TFS\drvsrc\source\FlashProgramCheck.c
#        -D DEBUG -D IAR -D CPU_MKW40Z160VHT4 -lcN "C:\Users\Jooyoun
#        Hong.Julianne\Desktop\cloned_star\ieee_802_15_4_mystarnetwork\examples\ieee_802_15_4\MyStarNetwork\EndDevice\frdmkw40z\FreeRTOS\build\iar\debug\list"
#        --diag_suppress Pa039,Pe068,Pe069,Pa082,Pe177,Pe186,Pe550,Pa050 -o
#        "C:\Users\Jooyoun
#        Hong.Julianne\Desktop\cloned_star\ieee_802_15_4_mystarnetwork\examples\ieee_802_15_4\MyStarNetwork\EndDevice\frdmkw40z\FreeRTOS\build\iar\debug\obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" --preinclude "C:\Users\Jooyoun
#        Hong.Julianne\Desktop\cloned_star\ieee_802_15_4_mystarnetwork/examples/ieee_802_15_4/MyStarNetwork/EndDevice/frdmkw40z/FreeRTOS/app_preinclude.h"
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/CMSIS/Include\
#        -I "C:\Users\Jooyoun
#        Hong.Julianne\Desktop\cloned_star\ieee_802_15_4_mystarnetwork/boards/frdmkw40z\"
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/devices\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/devices/MKW40Z4/include\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/devices/MKW40Z4/startup\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/system/src/clock/MKW40Z4\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/ieee_802_15_4/Source/App\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/ieee_802_15_4/Source/Mac/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/GPIOIrq\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/Keyboard/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/LED/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/SerialManager/Source/SPI_Adapter\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/Common\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/MemManager/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/Messaging/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/OSAbstraction/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/osa/inc\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/Panic/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/RNG/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/SerialManager/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/TimersManager/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/TimersManager/Source\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/FunctionLib\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/Lists\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/SecLib\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/ModuleInfo\
#        -I "C:\Users\Jooyoun
#        Hong.Julianne\Desktop\cloned_star\ieee_802_15_4_mystarnetwork/examples/ieee_802_15_4/MyStarNetwork/EndDevice/common\"
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/devices\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/devices/MKW40Z4/startup\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/rtos/FreeRTOS/include\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/rtos/FreeRTOS/port/iar\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/rtos/FreeRTOS/config/KW40Z4/iar\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/ieee_802_15_4/Source/Phy/Source/MKW40Z\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/ieee_802_15_4/Source/Phy/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/XCVR/MKW40Z4\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/DCDC/Interface\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/../ConnSw/framework/Flash/Internal\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/drivers/src/flash/C90TFS/drvsrc/include\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/drivers/inc\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/system/inc\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/hal/inc\
#        -I
#        C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0/platform/utilities/inc\
#        -On
#    List file    =  
#        C:\Users\Jooyoun
#        Hong.Julianne\Desktop\cloned_star\ieee_802_15_4_mystarnetwork\examples\ieee_802_15_4\MyStarNetwork\EndDevice\frdmkw40z\FreeRTOS\build\iar\debug\list\FlashProgramCheck.lst
#    Object file  =  
#        C:\Users\Jooyoun
#        Hong.Julianne\Desktop\cloned_star\ieee_802_15_4_mystarnetwork\examples\ieee_802_15_4\MyStarNetwork\EndDevice\frdmkw40z\FreeRTOS\build\iar\debug\obj\FlashProgramCheck.o
#
###############################################################################

C:\Freescale\KW40Z_Connectivity_Software_1.0.1\KSDK_1.3.0\platform\drivers\src\flash\C90TFS\drvsrc\source\FlashProgramCheck.c
      1          /*****************************************************************************
      2           (c) Copyright 2010-2014 Freescale Semiconductor, Inc.
      3           ALL RIGHTS RESERVED.
      4          
      5           Redistribution and use in source and binary forms, with or without
      6           modification, are permitted provided that the following conditions are met:
      7              * Redistributions of source code must retain the above copyright
      8                notice, this list of conditions and the following disclaimer.
      9              * Redistributions in binary form must reproduce the above copyright
     10                notice, this list of conditions and the following disclaimer in the
     11                documentation and/or other materials provided with the distribution.
     12              * Neither the name of the <organization> nor the
     13                names of its contributors may be used to endorse or promote products
     14                derived from this software without specific prior written permission.
     15          
     16           THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
     17           ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
     18           WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     19           DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY DIRECT,
     20           INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     21           (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
     22           LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
     23           ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
     24           (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     25           SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     26          ******************************************************************************
     27          
     28          *****************************************************************************
     29          *                                                                           *
     30          *        Standard Software Flash Driver For FTFx                            *
     31          *                                                                           *
     32          * FILE NAME     :  SSD_FTFx.h                                               *
     33          * DATE          :  Sep 25, 2014                                           *
     34          *                                                                           *
     35          * AUTHOR        :  FPT Team                                                 *
     36          * E-mail        :  r56611@freescale.com                                     *
     37          *                                                                           *
     38          *****************************************************************************/
     39          
     40          /************************** CHANGES *************************************
     41          1.1.GA      09.25.2014      FPT Team      First version of SDK C90TFS flash driver
     42                                                    inherited from BM C90TFS flash driver v1.02
     43                                                    (08.04.2014, FPT Team)
     44          *************************************************************************/
     45          /* include the header files */
     46          #include "SSD_FTFx.h"
     47          
     48          /************************************************************************
     49          *
     50          *  Function Name    : FlashProgramCheck.c
     51          *  Description      : The Program Check command tests a previously
     52          *                     programmed P-Flash or D-Flash longword to see
     53          *                     if it reads correctly at the specified margin level.
     54          *  Arguments        : PFLASH_SSD_CONFIG, uint32_t,uint32_t, uint8_t*, uint32_t*,
     55          *                     uint8_t*, uint8_t, pFLASHCOMMANDSEQUENCE
     56          *  Return Value     : uint32_t
     57          *
     58          *************************************************************************/
     59          
     60          /* Enable size optimization */
     61          #if(ARM_CORTEX_M != CPU_CORE)
     62          #pragma optimize_for_size on
     63          #pragma optimization_level 4
     64          #endif /* End of CPU_CORE */
     65          
     66          uint32_t SIZE_OPTIMIZATION FlashProgramCheck(PFLASH_SSD_CONFIG pSSDConfig, \
     67                                                          uint32_t  dest, \
     68                                                          uint32_t  size, \
     69                                                          uint8_t*  pExpectedData, \
     70                                                          uint32_t* pFailAddr, \
     71                                                          uint8_t   marginLevel, \
     72                                                          pFLASHCOMMANDSEQUENCE pFlashCommandSequence)
     73          {
     74          
     75              uint32_t ret;      /* return code variable */
     76              uint32_t offsetAddr ; /* offset address to convert to internal memory address */
     77              uint32_t temp;        /* temporary variable */
     78              uint8_t i;
     79              /* convert to byte address */
     80              dest = WORD2BYTE(dest);
     81              if (size & (PGMCHK_ALIGN_SIZE - 0x01U))
     82              {
     83                  ret = FTFx_ERR_SIZE;
     84          
     85              }
     86              else
     87              {
     88                  /* check if the destination is aligned or not */
     89          #if (DEBLOCK_SIZE)
     90                  offsetAddr = WORD2BYTE(pSSDConfig->DFlashBase);
     91                  if((dest >= offsetAddr) && (dest < (offsetAddr + pSSDConfig->DFlashSize)))
     92                  {
     93                      dest = dest - offsetAddr + 0x800000U;
     94                  }
     95                  else
     96          #endif
     97                  {
     98                      offsetAddr = WORD2BYTE(pSSDConfig->PFlashBase);
     99                      if((dest >= offsetAddr) && (dest < offsetAddr + pSSDConfig->PFlashSize))
    100                      {
    101                          dest -= offsetAddr;
    102                      }
    103                      else
    104                      {
    105                          ret = FTFx_ERR_ACCERR;
    106                          size = 0x0U;
    107                      }
    108                  }
    109                  while (size)
    110                  {
    111                      /* clear RDCOLERR & ACCERR & FPVIOL flag in flash status register. Write 1 to clear*/
    112                      temp = pSSDConfig->ftfxRegBase + FTFx_SSD_FSTAT_OFFSET;
    113                      REG_WRITE(temp, FTFx_SSD_FSTAT_ERROR_BITS);
    114          
    115                      /* passing parameter to the command */
    116                      temp = pSSDConfig->ftfxRegBase + FTFx_SSD_FCCOB0_OFFSET;
    117                      REG_WRITE(temp, FTFx_PROGRAM_CHECK);
    118          
    119                      temp = pSSDConfig->ftfxRegBase + FTFx_SSD_FCCOB1_OFFSET;
    120                      REG_WRITE(temp, GET_BIT_16_23(dest));
    121          
    122                      temp = pSSDConfig->ftfxRegBase + FTFx_SSD_FCCOB2_OFFSET;
    123                      REG_WRITE(temp, GET_BIT_8_15(dest));
    124          
    125                      temp = pSSDConfig->ftfxRegBase + FTFx_SSD_FCCOB3_OFFSET;
    126                      REG_WRITE(temp, GET_BIT_0_7(dest));
    127          
    128                      temp = pSSDConfig->ftfxRegBase + FTFx_SSD_FCCOB4_OFFSET;
    129                      REG_WRITE(temp, marginLevel);
    130          
    131                      for (i = 0x0U; i < PGMCHK_ALIGN_SIZE; i++)
    132                      {
    133                          temp = pSSDConfig->ftfxRegBase + i + 0x0CU;
    134                          REG_WRITE(temp, *(pExpectedData + i));
    135                      }
    136                      /* calling flash command sequence function to execute the command */
    137                      ret = pFlashCommandSequence(pSSDConfig);
    138          
    139                      /* checking for the success of command execution */
    140                      if(FTFx_OK != ret)
    141                      {
    142          #if (DEBLOCK_SIZE)
    143                          if(dest >= 0x800000U)
    144                          {
    145                              *pFailAddr = BYTE2WORD(dest + offsetAddr - 0x800000U);
    146                              size = PGMCHK_ALIGN_SIZE;
    147                          }
    148                          else
    149          #endif
    150                          {
    151                              *pFailAddr = BYTE2WORD(dest + offsetAddr);
    152                              size = PGMCHK_ALIGN_SIZE;
    153                          }
    154                      }
    155                      size -= PGMCHK_ALIGN_SIZE;
    156                      pExpectedData += PGMCHK_ALIGN_SIZE;
    157                      dest += PGMCHK_ALIGN_SIZE;
    158                  }
    159              }
    160          
    161          #if C90TFS_ENABLE_DEBUG
    162              /* Enter Debug state if enabled */
    163              if (TRUE == (pSSDConfig->DebugEnable))
    164              {
    165                  ENTER_DEBUG_MODE;
    166              }
    167          #endif
    168          
    169              return(ret);
    170          }
    171          /* end of file */
    172          
    173          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   FlashProgramCheck
        40   -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     220  FlashProgramCheck

 
 220 bytes in section .text
 
 220 bytes of CODE memory

Errors: none
Warnings: none
